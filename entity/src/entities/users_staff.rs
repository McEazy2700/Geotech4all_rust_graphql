//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "users_staff")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub can_create_post: bool,
    #[sea_orm(unique)]
    pub user_id: i64,
    pub can_alter_podcast: bool,
    pub can_alter_post: bool,
    pub can_alter_user: bool,
    pub can_create_podcast: bool,
    pub can_create_user: bool,
    pub can_delete_podcast: bool,
    pub can_delete_post: bool,
    pub can_delete_user: bool,
    pub can_create_opportunities: bool,
    pub can_delete_opportunities: bool,
    pub can_update_opportunities: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::users_customuser::Entity",
        from = "Column::UserId",
        to = "super::users_customuser::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    UsersCustomuser,
}

impl Related<super::users_customuser::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UsersCustomuser.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
