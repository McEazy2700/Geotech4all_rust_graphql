//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "common_organization")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub name: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    pub logo_id: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::assets_image::Entity",
        from = "Column::LogoId",
        to = "super::assets_image::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    AssetsImage,
    #[sea_orm(has_many = "super::opportunities_opportunity::Entity")]
    OpportunitiesOpportunity,
    #[sea_orm(has_many = "super::podcast_guest::Entity")]
    PodcastGuest,
}

impl Related<super::assets_image::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AssetsImage.def()
    }
}

impl Related<super::opportunities_opportunity::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::OpportunitiesOpportunity.def()
    }
}

impl Related<super::podcast_guest::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PodcastGuest.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
