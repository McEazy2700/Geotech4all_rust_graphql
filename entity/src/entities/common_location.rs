//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "common_location")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub country: Option<String>,
    pub state: Option<String>,
    pub address: Option<String>,
    pub zip_code: Option<String>,
    pub date_added: Option<DateTimeWithTimeZone>,
    pub last_updated: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::opportunities_opportunity::Entity")]
    OpportunitiesOpportunity,
}

impl Related<super::opportunities_opportunity::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::OpportunitiesOpportunity.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
